import { Button, TextEdit, ListView } from "std-widgets.slint";
import { Entry } from "entry.slint";

export component MainWindow {
    width: 500px;
    height: 500px;
    callback modelAppend(string);
    callback modelDeleteEntry(int);
    callback benchmark() -> string;
    in-out property <[Entry]> model: [];
    FocusScope {
        key-pressed(event) => {
            if (event.modifiers.control && event.modifiers.shift && (event.text == "Q" || event.text == "q")) {
                textEdit.text = root.benchmark();
            }
            accept
        }
    }

    VerticalLayout {
        width: 100%;
        height: 100%;
        HorizontalLayout {
            vertical-stretch: 2;
            textEdit := TextEdit {
                horizontal-stretch: 3;
            }

            buttonAdd := Button {
                horizontal-stretch: 1;
                text: "Add";
                clicked => {
                    root.modelAppend(textEdit.text);
                }
            }
        }

        listView := ListView {
            vertical-stretch: 8;
            for data in model: Rectangle {
                height: 30px;
                width: parent.width;
                HorizontalLayout {
                    Text {
                        text: data.text;
                        width: parent.width * 0.8;
                    }

                    Button {
                        text: "Delete";
                        width: parent.width * 0.2;
                        clicked => {
                            modelDeleteEntry(data.id);
                        }
                    }
                }
            }
        }
    }
}
